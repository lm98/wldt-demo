/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // wldt dependencies
    implementation group: 'io.github.wldt', name: 'wldt-core', version: '0.4.0'
    implementation 'io.github.wldt:mqtt-physical-adapter:0.1.2'
    implementation 'io.github.wldt:http-digital-adapter:0.2'
    
    // Mqtt
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register('runDT', JavaExec) {
    mainClass = 'org.example.App'
    classpath = sourceSets.main.runtimeClasspath
}

tasks.register('runThermometer', JavaExec) {
    mainClass = 'org.example.Thermometer'
    classpath = sourceSets.main.runtimeClasspath
}