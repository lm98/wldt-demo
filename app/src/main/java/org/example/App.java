/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.shadowing.DefaultShadowingFunction;
import it.wldt.adapter.http.digital.adapter.HttpDigitalAdapter;
import it.wldt.adapter.http.digital.adapter.HttpDigitalAdapterConfiguration;
import it.wldt.adapter.mqtt.physical.MqttPhysicalAdapter;
import it.wldt.adapter.mqtt.physical.MqttPhysicalAdapterConfiguration;
import it.wldt.core.engine.DigitalTwin;
import it.wldt.core.engine.DigitalTwinEngine;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        try {
            var dt = new DigitalTwin("my-twin", new DefaultShadowingFunction());
            // Config digital adapter
            var digitalConfig = new HttpDigitalAdapterConfiguration("my-http-adapter", "localhost", 8080);
            // Add property filter
            digitalConfig.addPropertyFilter("temperature");
            digitalConfig.addPropertyFilter("humidity");

            var httpDigitalAdapter = new HttpDigitalAdapter(digitalConfig, dt);

            // Create an instance of MqttPhysical Adapter Configuration
            var physicalConfig = MqttPhysicalAdapterConfiguration.builder("127.0.0.1", 1883)
                    .addPhysicalAssetPropertyAndTopic("temperature", 0.0, "sensor/temperature", Double::parseDouble)
                    .addPhysicalAssetPropertyAndTopic("humidity", 0.0, "sensor/humidity", Double::parseDouble)
                    .build();

            var mqttPhysicalAdapter = new MqttPhysicalAdapter("test-mqtt-pa", physicalConfig);

            dt.addDigitalAdapter(httpDigitalAdapter);
            dt.addPhysicalAdapter(mqttPhysicalAdapter);

            var dtEngine = new DigitalTwinEngine();
            dtEngine.addDigitalTwin(dt);

            dtEngine.startAll();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
